name: Test and upload documentation to artifacts

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
  push:
    branches:
      - main
      - previews
      - v[0-9]+.x-staging
      - v[0-9]+.x

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  NODE_VERSION: lts/*

permissions:
  contents: read

jobs:
  build-docs:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    outputs:
      DOCS_HAVE_CHANGED: ${{ steps.output.outputs.DOCS_HAVE_CHANGED }}
    steps:
      - name: Find the last successful workflow
        if: github.event.action == 'synchronize'
        id: last-successful-run
        run: |
          WORKFLOW_ID=$(gh api /repos/${{ github.repository }}/actions/runs/${{ github.run_id }} --jq .workflow_id)
          NB_OF_COMMITS=1
          for sha in $(gh api /repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/commits --jq 'map(.sha) | reverse | join("\n")'); do
            ((NB_OF_COMMITS++))
            if [ $(gh api -X GET /repos/${{ github.repository }}/actions/workflows/$WORKFLOW_ID/runs -f head_sha=$sha -f status=success --jq .total_count) -gt 0 ]; then
              echo "sha=$sha" >> "$GITHUB_OUTPUT"
              break
            fi
          done
          echo "nbOfCommits=$NB_OF_COMMITS" >> "GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ github.token }}
      - name: Compute number of commits in the PR
        id: nb-of-commits
        run: |
          if [ "${{ github.event.action }}" = "synchronize" ]; then
            echo "plusOne=$((${{ steps.last-successful-run.outputs.nbOfCommits }} + 1))" >> "$GITHUB_OUTPUT"
          else
            echo "plusOne=2" >> "GITHUB_OUTPUT"
          fi
      - uses: actions/checkout@v3
        with:
          fetch-depth: ${{ steps.nb-of-commits.outputs.plusOne }}
          persist-credentials: false
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Environment Information
        run: npx envinfo
      - name: Build
        run: NODE=$(command -v node) make doc-only
      - name: Check if the docs have changed (synchronize)
        if: github.event.action == 'synchronize'
        run: git diff --quiet ${{ steps.last-successful-run.outputs.sha || github.event.pull_request.base.ref }} -- doc/api || echo "DOCS_HAVE_CHANGED=1" >> "$GITHUB_ENV"
      - name: Check if the docs have changed ((re)open)
        if: github.event.pull_request && github.event.action != 'synchronize'
        run: git diff --quiet ${{ github.event.pull_request.base.ref }} -- doc/api || echo "DOCS_HAVE_CHANGED=1" >> "$GITHUB_ENV"
      - id: output
        name: Output result of the previous check
        run: echo "DOCS_HAVE_CHANGED=${{ env.DOCS_HAVE_CHANGED }}" > "$GITHUB_OUTPUT"
      - uses: actions/upload-artifact@v3
        if: env.DOCS_HAVE_CHANGED || github.event.pusher
        with:
          name: docs
          path: out/doc
      - name: Test
        run: NODE=$(command -v node) make test-doc-ci TEST_CI_ARGS="-p actions --measure-flakiness 9"
  deploy-preview:
    needs: build-docs
    if: needs.build-docs.outputs.DOCS_HAVE_CHANGED == 1
    concurrency:
      group: node-pr-doc-preview
      cancel-in-progress: false
    runs-on: ubuntu-latest
    steps:
      - name: Check out the gh-pages branch
        uses: actions/checkout@v3
        with:
          # We want to persist credentials so we can push to gh-pages
          persist-credentials: true
          ref: gh-pages
          repository: ${{ github.repository_owner }}/node-pr-doc-preview
          # A personal token is required GITHUB_TOKEN cannot be configured to
          # have write access on a repo except the one the action runs on.
          # It needs to be set here because `checkout` configures GitHub
          # authentication for push as well.
          token: ${{ secrets.GH_USER_TOKEN }}
      - name: Erase previous version (if it exists)
        run: rm -rf "${{ github.event.pull_request.number }}"
      - name: Download tarball from build job
        uses: actions/download-artifact@v3
        with:
          name: docs
          path: ${{ github.event.pull_request.number }}
      - name: Commit the doc preview to gh-pages
        run: |
          git config user.email "github-bot@iojs.org"
          git config user.name "Node.js GitHub Bot"
          git diff --quiet || (\
            git add "${{ github.event.pull_request.number }}" &&\
            git commit \
              -m "Add/Update preview for ${{ github.event.pull_request.html_url }}" \
              -m "The preview will be available at https://${{ github.repository_owner }}.github.io/node-pr-doc-preview/${{ github.event.pull_request.number }}/api/" &&\
            git push origin HEAD:gh-pages \
          )
